Computers today use complex circuits in order to perform all sorts of tasks, such as storing and retrieving values, performing operations and processing a series of instructions within a program. In order for the computer to be able to do all the operations, they require the programs that call the operations be loaded into computer memory to be executed. 

The need to program machines existed way before the development of computers. One of the first implementations of programming actually begins with the Jacquard’s programmable textile loom that utilizes punch cards to determine if a specific thread was held high or low in the loom, such that the cross thread passed above or below the thread. To apply variations to the design, these punch cards were arranged in long chains, forming a sequence of commands for the loom, which matches the ideas of the computer programming we know today. Punched cards turned out to be a cheap, reliable and fairly human-readable way to store data. Punched cards would also be used later on to help tabulate the 1890 US Census. The only problem with this system is that it only serves one purpose which is to tabulate.

Over time, these business machines grew in capability, adding arithmetic features as well as becoming capable of making simple decisions about when to perform certain operations. These operations were asked by the programmer through the control paneer, which in that time were called the plug boards. Using plug boards, programmers can plug cable to different sockets in order to pass values and signals between different parts of the machines, however, this requires the programmer to rewire the system every time a different operation wants to be done. To relieve this issue, swappable plug boards were created in order to ease the changing of operations without rewiring.

Stored-program computers emerged in the late 1940s, storing programs and data in memory for easy access and modification. Electronic memory enabled the von Neumann architecture, combining data and instructions in a single shared memory. The von Neumann architecture standardized a unified structure of these computers, including a central processing unit containing an ALU, data registers, instruction register, instruction address registers and memory to store data and instructions.

Even with electronic memory, punch cards remained a common way to load programs until the 1980s. Around 1960, the first mainframes—general purpose computers—were developed, although they could only be operated by professionals and the cost was extreme. The data and instructions were input by punch cards, meaning that no input could be added while the program was running. Other methods like punched paper tape and control panels with switches and buttons were also used. Another common way to control computers was through panel programming. In panel programming, switches and buttons were used to input data and programs, common on home computers of the 1950s and 60s.

Programming these early computers was difficult and time-consuming, requiring expertise in hardware and machine code. The need for a simpler way to program computers led to the development of programming languages. Programming languages differ from natural languages in that natural languages are only used for interaction between people, while programming languages also allow humans to communicate instructions to machines. After the invention of the microprocessor, computers in the 1970s became dramatically cheaper. New computers also allowed more user interaction, which was supported by newer programming languages.
